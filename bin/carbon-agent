#!/usr/bin/ruby

require 'optparse'
require 'socket'
require_relative '../lib/metrics'
include Metrics

hostname = Socket.gethostname
carbon_server = 'carbon-server'
carbon_port = 2003
interval = 10

opts = OptionParser.new do |opts|
  opts.on("-n", "--myname [hostname]", "Report hostname different from gethostname()") do |arg|
    hostname = arg
  end
  opts.on("-s", "--server [hostname]", "Hostname or IP of carbon server") do |arg|
    carbon_server = arg
  end
  opts.on("-p", "--port [number]", "IP port on carbon server") do |arg|
    carbon_port = arg.to_i
  end
  opts.on("-i", "--interval [number]", "Seconds to sleep between reports") do |arg|
    interval = arg.to_i
  end
end

opts.parse(ARGV)

while true do
  time = Time.now.strftime('%s')

  message = ""
  message << "servers.#{hostname}.load_1min #{load_1m} #{time}\n"
  message << "servers.#{hostname}.mem_total #{mem_total * 1024} #{time}\n"
  message << "servers.#{hostname}.mem_free #{mem_free * 1024} #{time}\n"
  message << "servers.#{hostname}.swap_total #{swap_total * 1024} #{time}\n"
  message << "servers.#{hostname}.swap_free #{swap_free * 1024} #{time}\n"
  filesystem_space.each do |fs|
    message << "servers.#{hostname}.filesystem.#{fs[0]} #{fs[1]} #{time}\n"
  end
  begin
    message << "servers.#{hostname}.apache.active_workers #{apache_active_workers} #{time}\n"
    message << "servers.#{hostname}.apache.idle_workers #{apache_idle_workers} #{time}\n"
  rescue MetricNotAvailable
  end
  begin
    message << "servers.#{hostname}.mysql.slave_lag #{slave_lag} #{time}\n"
  rescue MetricNotAvailable
  end
  
  UDPSocket.new.send message, 0, carbon_server, carbon_port

  sleep interval
end
